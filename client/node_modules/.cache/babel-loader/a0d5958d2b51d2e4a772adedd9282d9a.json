{"ast":null,"code":"var _jsxFileName = \"/Users/antdwash/Desktop/:coding:projects/shop-me/src/page/shop-page/ShopPage.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { setShopItemsAction } from \"src/redux/shop/shopActions\";\nimport CollectionPage from \"src/page/collection-page/CollectionPage\";\nimport CollectionOverview from \"src/components/collection-overview/CollectionOverview\";\nimport { convertCollectionsSnapshotToMap, firestore, fireStoreDbPaths } from \"src/firebase/util\";\n\nconst ShopPage = ({\n  match,\n  setShopItems\n}) => {\n  useEffect(() => {\n    const collectionRef = firestore.collection(fireStoreDbPaths.shopItems);\n    collectionRef.onSnapshot(async snapshot => {\n      const shopItemsMap = convertCollectionsSnapshotToMap(snapshot);\n      setShopItems(shopItemsMap);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setShopItems: shopItems => dispatch(setShopItemsAction(shopItems))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/antdwash/Desktop/:coding:projects/shop-me/src/page/shop-page/ShopPage.jsx"],"names":["React","useEffect","connect","Route","setShopItemsAction","CollectionPage","CollectionOverview","convertCollectionsSnapshotToMap","firestore","fireStoreDbPaths","ShopPage","match","setShopItems","collectionRef","collection","shopItems","onSnapshot","snapshot","shopItemsMap","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,kBAAT,QAAmC,4BAAnC;AAEA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,kBAAP,MAA+B,uDAA/B;AAEA,SACEC,+BADF,EAEEC,SAFF,EAGEC,gBAHF,QAIO,mBAJP;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6B;AAC5CX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqBL,gBAAgB,CAACM,SAAtC,CAAtB;AACAF,IAAAA,aAAa,CAACG,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,YAAY,GAAGX,+BAA+B,CAACU,QAAD,CAApD;AACAL,MAAAA,YAAY,CAACM,YAAD,CAAZ;AACD,KAHD;AAID,GANQ,CAAT;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEP,KAAK,CAACQ,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEb,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACQ,IAAK,gBAFtB;AAGE,IAAA,SAAS,EAAEd,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAnBD;;AAqBA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCT,EAAAA,YAAY,EAAGG,SAAD,IAAeM,QAAQ,CAACjB,kBAAkB,CAACW,SAAD,CAAnB;AADG,CAAf,CAA3B;;AAIA,eAAeb,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCV,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { setShopItemsAction } from \"src/redux/shop/shopActions\";\n\nimport CollectionPage from \"src/page/collection-page/CollectionPage\";\nimport CollectionOverview from \"src/components/collection-overview/CollectionOverview\";\n\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n  fireStoreDbPaths,\n} from \"src/firebase/util\";\n\nconst ShopPage = ({ match, setShopItems }) => {\n  useEffect(() => {\n    const collectionRef = firestore.collection(fireStoreDbPaths.shopItems);\n    collectionRef.onSnapshot(async (snapshot) => {\n      const shopItemsMap = convertCollectionsSnapshotToMap(snapshot);\n      setShopItems(shopItemsMap);\n    });\n  });\n\n  return (\n    <div>\n      <Route exact path={`${match.path}`} component={CollectionOverview} />\n      <Route\n        exact\n        path={`${match.path}/:collectionId`}\n        component={CollectionPage}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setShopItems: (shopItems) => dispatch(setShopItemsAction(shopItems)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}