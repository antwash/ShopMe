{"ast":null,"code":"var _jsxFileName = \"/Users/antdwash/Desktop/coding:projects/shop-me/client/src/components/signup/SignUp.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"src/components/form-input/FormInput\";\nimport FormButton from \"src/components/button/FormButton\";\nimport { auth, createAuthenticatedUserRef } from \"src/firebase/util\";\nimport \"src/components/signup/signup.styles.scss\";\n\nconst SignUp = () => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    displayName: \"\"\n  });\n  const {\n    email,\n    password,\n    confirmPassword,\n    displayName\n  } = userCredentials;\n\n  const handleSignUpFormInputChanged = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmitSignUpForm = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"The passwords do not match!\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      const newUser = { ...user,\n        displayName\n      };\n      await createAuthenticatedUserRef(newUser);\n      setUserCredentials({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        displayName: \"\"\n      });\n      console.log(`New user created with email: ${newUser.email} on ${newUser.metadata.creationTime}`);\n    } catch (error) {\n      console.log(\"Error signing up new user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Sign up with your username, email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmitSignUpForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    label: \"Display Name\",\n    value: displayName,\n    onHandleChange: handleSignUpFormInputChanged,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    value: email,\n    onHandleChange: handleSignUpFormInputChanged,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    value: password,\n    onHandleChange: handleSignUpFormInputChanged,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    value: confirmPassword,\n    onHandleChange: handleSignUpFormInputChanged,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormButton, {\n    type: \"submit\",\n    label: \"SIGN UP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/antdwash/Desktop/coding:projects/shop-me/client/src/components/signup/SignUp.jsx"],"names":["React","useState","FormInput","FormButton","auth","createAuthenticatedUserRef","SignUp","userCredentials","setUserCredentials","email","password","confirmPassword","displayName","handleSignUpFormInputChanged","event","name","value","target","handleSubmitSignUpForm","preventDefault","alert","user","createUserWithEmailAndPassword","newUser","console","log","metadata","creationTime","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport FormInput from \"src/components/form-input/FormInput\";\nimport FormButton from \"src/components/button/FormButton\";\n\nimport { auth, createAuthenticatedUserRef } from \"src/firebase/util\";\n\nimport \"src/components/signup/signup.styles.scss\";\n\nconst SignUp = () => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    displayName: \"\",\n  });\n\n  const { email, password, confirmPassword, displayName } = userCredentials;\n\n  const handleSignUpFormInputChanged = (event) => {\n    const { name, value } = event.target;\n    setUserCredentials({\n      ...userCredentials,\n      [name]: value,\n    });\n  };\n\n  const handleSubmitSignUpForm = async (event) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"The passwords do not match!\");\n      return;\n    }\n\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      const newUser = { ...user, displayName };\n      await createAuthenticatedUserRef(newUser);\n      setUserCredentials({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        displayName: \"\",\n      });\n      console.log(\n        `New user created with email: ${newUser.email} on ${newUser.metadata.creationTime}`\n      );\n    } catch (error) {\n      console.log(\"Error signing up new user:\", error);\n    }\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2>I do not have an account</h2>\n      <span>Sign up with your username, email and password</span>\n      <form onSubmit={handleSubmitSignUpForm}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          label=\"Display Name\"\n          value={displayName}\n          onHandleChange={handleSignUpFormInputChanged}\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onHandleChange={handleSignUpFormInputChanged}\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onHandleChange={handleSignUpFormInputChanged}\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          label=\"Confirm Password\"\n          value={confirmPassword}\n          onHandleChange={handleSignUpFormInputChanged}\n          required\n        />\n        <FormButton type=\"submit\" label=\"SIGN UP\" />\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}