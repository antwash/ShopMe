{"ast":null,"code":"var _jsxFileName = \"/Users/antdwash/Desktop/coding:projects/shop-me/src/page/shop-page/ShopPage.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"src/page/collection-page/CollectionPage\";\nimport CollectionOverview from \"src/components/collection-overview/CollectionOverview\";\nimport WithLoadingSpinner from \"src/components/loading-spinner/loading-spinner\";\nimport { selectIsFetchingShopItems } from \"src/redux/shop/shopSelectors\";\nimport { fetchShopItemsAsync } from \"src/redux/shop/shopActions\";\nconst CollectionPageWithSpinner = WithLoadingSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  isLoading,\n  fetchShopItems\n}) => {\n  useEffect(() => {\n    fetchShopItems();\n  }, [fetchShopItems]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}/:collectionId`,\n    render: props => {\n      return /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsFetchingShopItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchShopItems: () => dispatch(fetchShopItemsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/antdwash/Desktop/coding:projects/shop-me/src/page/shop-page/ShopPage.jsx"],"names":["React","useEffect","connect","createStructuredSelector","Route","CollectionPage","CollectionOverview","WithLoadingSpinner","selectIsFetchingShopItems","fetchShopItemsAsync","CollectionPageWithSpinner","ShopPage","match","isLoading","fetchShopItems","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,kBAAP,MAA+B,uDAA/B;AACA,OAAOC,kBAAP,MAA+B,gDAA/B;AAEA,SAASC,yBAAT,QAA0C,8BAA1C;AACA,SAASC,mBAAT,QAAoC,4BAApC;AAEA,MAAMC,yBAAyB,GAAGH,kBAAkB,CAACF,cAAD,CAApD;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAA0C;AACzDb,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAET,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACG,IAAK,gBAFtB;AAGE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,0BAAO,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAqDG,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAYD,CAjBD;;AAmBA,MAAMC,eAAe,GAAGd,wBAAwB,CAAC;AAC/CU,EAAAA,SAAS,EAAEL;AADoC,CAAD,CAAhD;;AAIA,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxCL,EAAAA,cAAc,EAAE,MAAMK,QAAQ,CAACV,mBAAmB,EAApB;AADU,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { Route } from \"react-router-dom\";\n\nimport CollectionPage from \"src/page/collection-page/CollectionPage\";\nimport CollectionOverview from \"src/components/collection-overview/CollectionOverview\";\nimport WithLoadingSpinner from \"src/components/loading-spinner/loading-spinner\";\n\nimport { selectIsFetchingShopItems } from \"src/redux/shop/shopSelectors\";\nimport { fetchShopItemsAsync } from \"src/redux/shop/shopActions\";\n\nconst CollectionPageWithSpinner = WithLoadingSpinner(CollectionPage);\n\nconst ShopPage = ({ match, isLoading, fetchShopItems }) => {\n  useEffect(() => {\n    fetchShopItems();\n  }, [fetchShopItems]);\n\n  return (\n    <div>\n      <Route exact path={`${match.path}`} component={CollectionOverview} />\n      <Route\n        exact\n        path={`${match.path}/:collectionId`}\n        render={(props) => {\n          return <CollectionPageWithSpinner isLoading={isLoading} {...props} />;\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsFetchingShopItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchShopItems: () => dispatch(fetchShopItemsAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}