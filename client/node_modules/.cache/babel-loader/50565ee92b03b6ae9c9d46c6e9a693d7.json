{"ast":null,"code":"var _jsxFileName = \"/Users/antdwash/Desktop/:coding:projects/shop-me/src/index.js\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport store from \"src/redux/store\";\nimport { setCurrentUserAction } from \"src/redux/user/userActions\";\nimport { auth, createAuthenticatedUserRef } from \"src/firebase/util\";\nimport Header from \"src/components/header/Header\";\nimport HomePage from \"src/page/home-page/HomePage\";\nimport ShopPage from \"src/page/shop-page/ShopPage\";\nimport AuthPage from \"src/page/auth-page/AuthPage\";\nimport \"src/index.css\";\n\nconst App = () => {\n  useEffect(() => {\n    // Firebase auth subscription listens to authentication\n    // changes and returns new auth state via the callback.\n    // onAuthStateChanged returns a callback we can use\n    // to close the subscription once our application\n    // node is removed from the DOM.\n    this.unsubscribeAuthStateSubscription = auth.onAuthStateChanged(async authenticatedUser => {\n      const {\n        setCurrentUser\n      } = this.props;\n\n      if (!authenticatedUser) {\n        setCurrentUser(null);\n        return;\n      }\n\n      const userRef = await createAuthenticatedUserRef(authenticatedUser);\n      userRef.onSnapshot(snapShot => {\n        const snapShotData = snapShot.data();\n        const currentUser = {\n          id: snapShot.id,\n          ...snapShotData\n        };\n        setCurrentUser(currentUser);\n      });\n    });\n  }); // constructor() {\n  //   super();\n  //   this.unsubscribeAuthStateSubscription = null;\n  // }\n  // componentWillUnmount() {\n  //   this.unsubscribeAuthStateSubscription();\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    compgonent: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    component: AuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUserAction(user))\n});\n\nconst ConnectedApp = connect(null, mapDispatchToProps)(App);\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(ConnectedApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }\n})))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/antdwash/Desktop/:coding:projects/shop-me/src/index.js"],"names":["React","useEffect","ReactDOM","BrowserRouter","Route","Switch","Provider","connect","store","setCurrentUserAction","auth","createAuthenticatedUserRef","Header","HomePage","ShopPage","AuthPage","App","unsubscribeAuthStateSubscription","onAuthStateChanged","authenticatedUser","setCurrentUser","props","userRef","onSnapshot","snapShot","snapShotData","data","currentUser","id","mapDispatchToProps","dispatch","user","ConnectedApp","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider, connect } from \"react-redux\";\n\nimport store from \"src/redux/store\";\nimport { setCurrentUserAction } from \"src/redux/user/userActions\";\n\nimport { auth, createAuthenticatedUserRef } from \"src/firebase/util\";\n\nimport Header from \"src/components/header/Header\";\n\nimport HomePage from \"src/page/home-page/HomePage\";\nimport ShopPage from \"src/page/shop-page/ShopPage\";\nimport AuthPage from \"src/page/auth-page/AuthPage\";\n\nimport \"src/index.css\";\n\nconst App = () => {\n  useEffect(() => {\n    // Firebase auth subscription listens to authentication\n    // changes and returns new auth state via the callback.\n    // onAuthStateChanged returns a callback we can use\n    // to close the subscription once our application\n    // node is removed from the DOM.\n    this.unsubscribeAuthStateSubscription = auth.onAuthStateChanged(\n      async (authenticatedUser) => {\n        const { setCurrentUser } = this.props;\n\n        if (!authenticatedUser) {\n          setCurrentUser(null);\n          return;\n        }\n\n        const userRef = await createAuthenticatedUserRef(authenticatedUser);\n        userRef.onSnapshot((snapShot) => {\n          const snapShotData = snapShot.data();\n          const currentUser = {\n            id: snapShot.id,\n            ...snapShotData,\n          };\n          setCurrentUser(currentUser);\n        });\n      }\n    );\n  });\n  // constructor() {\n  //   super();\n  //   this.unsubscribeAuthStateSubscription = null;\n  // }\n\n  // componentWillUnmount() {\n  //   this.unsubscribeAuthStateSubscription();\n  // }\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/shop\" compgonent={ShopPage} />\n        <Route path=\"/signin\" component={AuthPage} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUserAction(user)),\n});\n\nconst ConnectedApp = connect(null, mapDispatchToProps)(App);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ConnectedApp />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}