{"ast":null,"code":"var _jsxFileName = \"/Users/antdwash/Desktop/:coding:projects/shop-me/src/page/shop-page/ShopPage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { setShopItemsAction } from \"src/redux/shop/shopActions\";\nimport CollectionPage from \"src/page/collection-page/CollectionPage\";\nimport CollectionOverview from \"src/components/collection-overview/CollectionOverview\";\nimport WithLoadingSpinner from \"src/components/loading-spinner/loading-spinner\";\nimport { convertShopItemsCollectionSnapshotToMap, firestore, fireStoreDbPaths } from \"src/firebase/util\";\nconst CollectionOverviewWithSpinner = WithLoadingSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithLoadingSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  setShopItems\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection(fireStoreDbPaths.shopItems);\n    collectionRef.onSnapshot(async snapshot => {\n      const shopItemsMap = convertShopItemsCollectionSnapshotToMap(snapshot);\n      setShopItems(shopItemsMap);\n      setIsLoading(false);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => {\n      return /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}/:collectionId`,\n    render: props => {\n      return /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setShopItems: shopItems => dispatch(setShopItemsAction(shopItems))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/antdwash/Desktop/:coding:projects/shop-me/src/page/shop-page/ShopPage.jsx"],"names":["React","useEffect","useState","connect","Route","setShopItemsAction","CollectionPage","CollectionOverview","WithLoadingSpinner","convertShopItemsCollectionSnapshotToMap","firestore","fireStoreDbPaths","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","setShopItems","isLoading","setIsLoading","collectionRef","collection","shopItems","onSnapshot","snapshot","shopItemsMap","path","props","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,kBAAT,QAAmC,4BAAnC;AAEA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,kBAAP,MAA+B,uDAA/B;AACA,OAAOC,kBAAP,MAA+B,gDAA/B;AAEA,SACEC,uCADF,EAEEC,SAFF,EAGEC,gBAHF,QAIO,mBAJP;AAMA,MAAMC,6BAA6B,GAAGJ,kBAAkB,CAACD,kBAAD,CAAxD;AACA,MAAMM,yBAAyB,GAAGL,kBAAkB,CAACF,cAAD,CAApD;;AAEA,MAAMQ,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6B;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqBT,gBAAgB,CAACU,SAAtC,CAAtB;AACAF,IAAAA,aAAa,CAACG,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,YAAY,GAAGf,uCAAuC,CAACc,QAAD,CAA5D;AACAP,MAAAA,YAAY,CAACQ,YAAD,CAAZ;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJD;AAKD,GAPQ,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEH,KAAK,CAACU,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,0BACE,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAET;AAA1C,SAAyDS,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,gBAFtB;AAGE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,0BAAO,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAET;AAAtC,SAAqDS,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAoBD,CAhCD;;AAkCA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,YAAY,EAAGK,SAAD,IAAeO,QAAQ,CAACvB,kBAAkB,CAACgB,SAAD,CAAnB;AADG,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\n\nimport { setShopItemsAction } from \"src/redux/shop/shopActions\";\n\nimport CollectionPage from \"src/page/collection-page/CollectionPage\";\nimport CollectionOverview from \"src/components/collection-overview/CollectionOverview\";\nimport WithLoadingSpinner from \"src/components/loading-spinner/loading-spinner\";\n\nimport {\n  convertShopItemsCollectionSnapshotToMap,\n  firestore,\n  fireStoreDbPaths,\n} from \"src/firebase/util\";\n\nconst CollectionOverviewWithSpinner = WithLoadingSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithLoadingSpinner(CollectionPage);\n\nconst ShopPage = ({ match, setShopItems }) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const collectionRef = firestore.collection(fireStoreDbPaths.shopItems);\n    collectionRef.onSnapshot(async (snapshot) => {\n      const shopItemsMap = convertShopItemsCollectionSnapshotToMap(snapshot);\n      setShopItems(shopItemsMap);\n      setIsLoading(false);\n    });\n  });\n\n  return (\n    <div>\n      <Route\n        exact\n        path={`${match.path}`}\n        render={(props) => {\n          return (\n            <CollectionOverviewWithSpinner isLoading={isLoading} {...props} />\n          );\n        }}\n      />\n      <Route\n        exact\n        path={`${match.path}/:collectionId`}\n        render={(props) => {\n          return <CollectionPageWithSpinner isLoading={isLoading} {...props} />;\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setShopItems: (shopItems) => dispatch(setShopItemsAction(shopItems)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}